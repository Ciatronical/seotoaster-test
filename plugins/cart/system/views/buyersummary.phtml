<?php $editMsg = '[&nbsp;'.$this->translate('edit').'&nbsp;]'; ?>
<div id="checkout-widget-preview">
	<?php if ($this->yourInformation) :?>
    <div id="checkout-user-info">
        <h3 class="checkout-widget-title">
	        <?php echo $this->translate('Your information'); ?>
	        <a href="<?php echo $this->websiteUrl . $this->checkoutPage->getUrl();?>" class="checkout-edit" title="<?php echo $this->translate('Edit address');?>"><?php echo $editMsg;?></a>
        </h3>
	    <div class="preview-content">
	        <span class="fullname"><i class="ticon-user icon24"></i> <?php echo $this->yourInformation['firstname'].' '.$this->yourInformation['lastname'] ; ?></span>
	        <span class="email"><i class="ticon-email icon24"></i> <?php echo $this->yourInformation['email']; ?></span>
	    </div>
	</div>
	<?php endif; ?>





<div id="paypal-button"></div>

<script src="https://www.paypalobjects.com/api/checkout.js"></script>


<div id="paypal-button-container"></div>

    <script>
        paypal.Button.render({

            env: 'sandbox', // sandbox | production

            // PayPal Client IDs - replace with your own
            // Create a PayPal app: https://developer.paypal.com/developer/applications/create
            client: {
                sandbox:    'AZDxjDScFpQtjWTOUtWKbyN_bDt4OgqaF4eYXlewfBP4-8aqX3PiV8e1GWU6liB2CUXlkA59kJXE7M6R',
                production: '<insert production client id>'
            },

            // Show the buyer a 'Pay Now' button in the checkout flow
            commit: true,

            // payment() is called when the button is clicked
            payment: function(data, actions) {

                // Make a call to the REST api to create the payment
                return actions.payment.create({
                    payment: {
                        transactions: [
                            {
                                amount: { total: '0.01', currency: 'USD' }
                            }
                        ]
                    }
                });
            },

            // onAuthorize() is called when the buyer approves the payment
            onAuthorize: function(data, actions) {

                // Make a call to the REST api to execute the payment
                return actions.payment.execute().then(function() {
                    window.alert('Payment Complete!');
                });
            }

        }, '#paypal-button-container');

    </script>




	<?php if ($this->shippingAddress) : ?>
	<div id="checkout-address-preview">
		<h3 class="checkout-widget-title <?php if ($this->shippingAddress): ?>disabled<?php endif; ?>">
			<?php if ($this->shippingData && $this->shippingData['service'] === Shopping::SHIPPING_PICKUP ):?>
			<?php echo $this->translate('Pickup information'); ?>
			<?php else : ?>
			<?php echo $this->translate('Shipping information'); ?>
			<?php endif; ?>
			<?php if ($this->shippingAddress && in_array(Cart::STEP_SHIPPING_OPTIONS, $this->returnAllowed)) : ?>
			<a href="<?php echo $this->websiteUrl . $this->checkoutPage->getUrl().'?step='.Cart::STEP_SHIPPING_OPTIONS;?>" class="checkout-edit" title="<?php echo $this->translate('Edit address');?>"><?php echo $editMsg;?></a>
			<?php endif; ?>
        </h3>
        <div class="preview-content">
		<?php
		if ($this->shippingAddress) {
			$fullname = trim($this->shippingAddress['firstname'] .' '. $this->shippingAddress['lastname']);
			if (!empty($fullname)){ echo $fullname.'<br />'; }
			if ($this->shippingData && $this->shippingData['service'] === Shopping::SHIPPING_PICKUP ) {

			} else {
				if (!empty($this->shippingAddress['email'])) { echo $this->shippingAddress['email'] .'<br />'; }
				if (!empty($this->shippingAddress['company'])) { echo $this->shippingAddress['company'] .'<br />'; }
				$addrLine = trim($this->shippingAddress['address1'] .' '. $this->shippingAddress['address2']);
				if (!empty($addrLine)){ echo $addrLine.'<br />'; }

				$state = Tools_Geo::getStateById($this->shippingAddress['state']);
				$location = join(', ', array_filter(array($this->shippingAddress['city'], $state['name'], $this->shippingAddress['zip'], $this->shippingAddress['country'])));
				if (!empty($location)){ echo $location.'<br />'; }
			}
			if (!empty($this->shippingAddress['phone'])) {
				echo $this->translate('Phone:') . $this->shippingAddress['phone'].'<br />';
			}
		}
		?>
		</div>
	</div>
	<?php endif; ?>

	<?php if ($this->shippingData) : ?>
	<div id="checkout-shipping-selected">
	    <h3 class="checkout-widget-title <?php if (empty($this->shippingData)): ?>disabled<?php endif; ?>">
		    <?php echo $this->translate('Shipping method')?>
			<?php if (!empty($this->shippingData)): ?>
			<?php if (in_array(Cart::STEP_PICKUP, $this->returnAllowed)) :?>
			<a href="<?php echo $this->websiteUrl . $this->checkoutPage->getUrl().'?step='.Cart::STEP_PICKUP;?>" class="checkout-edit" title="<?php echo $this->translate('Edit shipping method');?>">
				<?php echo $editMsg;?>
			</a>
			<?php elseif (in_array(Cart::STEP_SHIPPING_METHOD, $this->returnAllowed)) : ?>
	        <a href="<?php echo $this->websiteUrl . $this->checkoutPage->getUrl().'?step='.Cart::STEP_SHIPPING_METHOD;?>" class="checkout-edit" title="<?php echo $this->translate('Edit shipping method');?>">
		        <?php echo $editMsg;?>
	        </a>
			<?php endif ;?>
	    </h3>
        <div class="preview-content">
            <?php
            if ($this->shippingData['service'] === Shopping::SHIPPING_PICKUP) {
                $pickupLabel = $this->translate('Pickup');
                if ($this->defaultPickup) {
                    $pickupLabel = $this->translate('Free pickup');
                }
                echo $pickupLabel . '<br />';
            } else {
                echo $this->shippingData['service'] . ': ' . $this->shippingData['type'];
            }
            ?>
		</div>
        <?php endif; ?>
	</div>
	<?php endif; ?>

</div>
